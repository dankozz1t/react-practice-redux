{"version":3,"file":"static/js/946.db7764ee.chunk.js","mappings":"+NAIMA,E,MAAmBC,GAAAA,OAAa,CACpCC,QAAS,8DAMEC,EAHS,kBACpBH,EAAiBI,IAAI,GAAI,CAAEC,OAAQ,CAAEC,KAAM,EAAGC,MAPzB,KAMD,E,6BC4DtB,EA9DqB,WACnB,OAAgCC,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAEMC,GAAOC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMF,KAAKG,KAAf,IACxBC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACRP,GAAa,GACb,IACET,IAEGiB,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACPX,GAAY,SAAAK,GAAK,wBAAQA,IAAR,OAAkBM,GAAlB,GAClB,IACAC,SAAQ,WACPV,GAAa,EACd,GAGJ,CAFC,MAAOW,GACPC,QAAQC,IAAIF,EAAMG,QACnB,CACF,GAAE,IAYH,GAAIf,EACF,OAAO,uCAGT,IAAMgB,EAAWlB,EAASmB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,YAAb,OAC5B,2BACE,wBAAKD,KACL,uBAAIC,KACJ,mBACEC,KAAK,SACLC,QAAS,WApBQ,IAAAC,IAqBA,CAAEL,GAAAA,EAAIC,KAAAA,EAAMC,YAAAA,GApB7BlB,EAAKsB,MAAK,qBAAGD,KAAQL,KAAkBK,EAAKL,EAAlC,IACZO,MAAM,qBAAD,OAAsBF,EAAKJ,OAKlCb,GAASoB,EAAAA,EAAAA,IAAQ,CAAEH,KAAAA,IAed,EAJH,mBAHOL,EADmB,IAe9B,OACE,iCACE,2CACA,eAAIS,MAAO,CAAEC,QAAS,OAAQC,cAAe,SAAUC,IAAK,QAA5D,SACGd,MAIR,C","sources":["shared/service/api.service.js","pages/ProductsPage/ProductsPage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst LIMIT_PRODUCTS = 10;\n\nconst instanceProducts = axios.create({\n  baseURL: 'https://62becfba0bc9b125615fd0f7.mockapi.io/api/products?',\n});\n\nconst fetchProducts = () =>\n  instanceProducts.get('', { params: { page: 1, limit: LIMIT_PRODUCTS } });\n\nexport const api = {\n  fetchProducts,\n};\n","import React, { useState, useEffect } from 'react';\nimport { api } from 'shared/service/api.service';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { addCart } from '../../redux/cart/cart-slice';\n\nconst ProductsPage = () => {\n  const [products, setProducts] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const cart = useSelector(state => state.cart.items);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    setIsLoading(true);\n    try {\n      api\n        .fetchProducts()\n        .then(({ data }) => {\n          setProducts(state => [...state, ...data]);\n        })\n        .finally(() => {\n          setIsLoading(false);\n        });\n    } catch (error) {\n      console.log(error.message);\n    }\n  }, []);\n\n  const handleBuyClick = item => {\n    if (cart.some(({ item: { id } }) => id === item.id)) {\n      alert(`Duplicate product ${item.name}`);\n\n      return;\n    }\n\n    dispatch(addCart({ item }));\n  };\n\n  if (isLoading) {\n    return <h2>Loading...</h2>;\n  }\n\n  const elements = products.map(({ id, name, description }) => (\n    <li key={id}>\n      <h3>{name}</h3>\n      <p>{description}</p>\n      <button\n        type=\"button\"\n        onClick={() => {\n          handleBuyClick({ id, name, description });\n        }}\n      >\n        Buy\n      </button>\n    </li>\n  ));\n\n  return (\n    <>\n      <h2>Products Page</h2>\n      <ul style={{ display: 'flex', flexDirection: 'column', gap: '40px' }}>\n        {elements}\n      </ul>\n    </>\n  );\n};\n\nexport default ProductsPage;\n"],"names":["instanceProducts","axios","baseURL","api","get","params","page","limit","useState","products","setProducts","isLoading","setIsLoading","cart","useSelector","state","items","dispatch","useDispatch","useEffect","then","data","finally","error","console","log","message","elements","map","id","name","description","type","onClick","item","some","alert","addCart","style","display","flexDirection","gap"],"sourceRoot":""}